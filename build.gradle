import org.gradle.internal.os.OperatingSystem

plugins {
  id "groovy"
  id "org.jetbrains.kotlin.jvm" version "2.0.0"
  id "application"
}

final String kotlinVersion = "2.0.0"

project.ext.lwjglVersion = "3.3.3"
project.ext.jomlVersion = "1.10.5"

switch (OperatingSystem.current()) {
  case OperatingSystem.LINUX: project.ext.lwjglNatives = "natives-linux"; break
  case OperatingSystem.MAC_OS: project.ext.lwjglNatives = "natives-macos"; break
  case OperatingSystem.WINDOWS: project.ext.lwjglNatives = "natives-windows"; break
}

//final group = "org.example"
//final version = "1.0-SNAPSHOT"

repositories {
  mavenCentral()
}

dependencies {

  testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"

  runtimeOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.1"
  // groovy
  implementation 'org.codehaus.groovy:groovy-all:3.0.21'

  // Apache Ignite database
  implementation 'org.apache.ignite:ignite-core:2.16.0'

  // JSON helper
  implementation 'com.fasterxml.jackson.core:jackson-core:2.17.1'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
  implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.1'

  implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

  implementation "org.lwjgl:lwjgl"
  implementation "org.lwjgl:lwjgl-assimp"
  implementation "org.lwjgl:lwjgl-glfw"
  implementation "org.lwjgl:lwjgl-openal"
  implementation "org.lwjgl:lwjgl-opengl"
  implementation "org.lwjgl:lwjgl-stb"

  runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
  runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
  runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
  runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
  runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
  runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
  implementation "org.joml:joml:$jomlVersion"

  // Testing
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'

  testImplementation 'io.kotest:kotest-runner-junit5-jvm:5.9.1'
  testImplementation 'io.kotest:kotest-runner-junit5:5.9.1'
  testImplementation 'io.kotest:kotest-assertions-core:5.9.1'
  testImplementation 'io.kotest:kotest-property:5.9.1'
}

test {
  useJUnitPlatform()
//  dependsOn 'cleanTest'
  testLogging {
    events "passed", "skipped", "failed"
  }
}

// Thanks, chaottic!
sourceSets {
  main {
    java {
      srcDir("mods")
      exclude("*")
    }
  }
}

kotlin {
  jvmToolchain(22)
}

application {
  mainClass.set("MainKt")
}